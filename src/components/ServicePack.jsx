import React, { useState } from "react";

export default function ServicePack() {
  const [selectedPlan, setSelectedPlan] = useState(null);

  const servicePlans = [
    {
      id: 1,
      name: "G√≥i C∆° B·∫£n",
      type: "M·∫∑c ƒê·ªãnh",
      price: "50,000 VNƒê",
      period: "m·ªói l·∫ßn ƒë·ªïi",
      description:
        "G√≥i m·∫∑c ƒë·ªãnh cho t·∫•t c·∫£ ng∆∞·ªùi d√πng, ƒë·∫∑t l·ªãch v√† thanh to√°n khi ƒë·ªïi pin",
      features: [
        "ƒê·∫∑t l·ªãch tr·ª±c tuy·∫øn",
        "Nh√¢n vi√™n h·ªó tr·ª£ ƒë·ªïi pin",
        "Thanh to√°n khi ƒë·ªïi pin",
        "Kh√¥ng r√†ng bu·ªôc th·ªùi gian",
        "C√≥ s·∫µn cho m·ªçi t√†i kho·∫£n",
      ],
      color: "blue",
      icon: "üîã",
      popular: false,
    },
    {
      id: 2,
      name: "G√≥i Ti·∫øt Ki·ªám",
      type: "Premium",
      price: "299,000 VNƒê",
      period: "th√°ng",
      description: "ƒê·ªïi pin 10 l·∫ßn/th√°ng, ti·∫øt ki·ªám 50% so v·ªõi g√≥i c∆° b·∫£n",
      features: [
        "10 l·∫ßn ƒë·ªïi pin/th√°ng",
        "Kh√¥ng c·∫ßn thanh to√°n khi ƒë·ªïi",
        "∆Øu ti√™n ƒë·∫∑t l·ªãch",
        "H·ªó tr·ª£ 24/7",
        "Ti·∫øt ki·ªám 50% chi ph√≠",
      ],
      color: "green",
      icon: "üíé",
      popular: true,
    },
    {
      id: 3,
      name: "G√≥i Kh√¥ng Gi·ªõi H·∫°n",
      type: "Unlimited",
      price: "599,000 VNƒê",
      period: "th√°ng",
      description: "ƒê·ªïi pin kh√¥ng gi·ªõi h·∫°n trong 1 th√°ng",
      features: [
        "ƒê·ªïi pin kh√¥ng gi·ªõi h·∫°n",
        "Kh√¥ng c·∫ßn thanh to√°n khi ƒë·ªïi",
        "∆Øu ti√™n cao nh·∫•t",
        "H·ªó tr·ª£ VIP 24/7",
        "ƒê·∫∑t l·ªãch linh ho·∫°t",
        "Ti·∫øt ki·ªám t·ªëi ƒëa",
      ],
      color: "purple",
      icon: "üëë",
      popular: false,
    },
  ];

  const handleSelectPlan = (plan) => {
    setSelectedPlan(plan);
    // C√≥ th·ªÉ th√™m logic x·ª≠ l√Ω ƒëƒÉng k√Ω g√≥i ·ªü ƒë√¢y
    console.log("ƒê√£ ch·ªçn g√≥i:", plan.name);
  };

  const getColorClasses = (color) => {
    const colors = {
      blue: "border-blue-500 bg-blue-50 text-blue-700",
      green: "border-green-500 bg-green-50 text-green-700",
      purple: "border-purple-500 bg-purple-50 text-purple-700",
    };
    return colors[color] || colors.blue;
  };

  const getButtonClasses = (color) => {
    const colors = {
      blue: "bg-blue-600 hover:bg-blue-700 text-white",
      green: "bg-green-600 hover:bg-green-700 text-white",
      purple: "bg-purple-600 hover:bg-purple-700 text-white",
    };
    return colors[color] || colors.blue;
  };

  return (
    <section className="py-16 bg-gradient-to-br from-gray-50 to-gray-100">
      <div className="mx-auto max-w-screen-2xl px-4 sm:px-6 lg:px-8">
        {/* Header */}
        <div className="text-center mb-12">
          <h2 className="text-4xl font-bold text-gray-900 mb-4">
            üîã G√≥i D·ªãch V·ª• ƒê·ªïi Pin VoltSwap
          </h2>
          <p className="text-xl text-gray-600 max-w-3xl mx-auto">
            Ch·ªçn g√≥i d·ªãch v·ª• ph√π h·ª£p v·ªõi nhu c·∫ßu s·ª≠ d·ª•ng c·ªßa b·∫°n. T·∫•t c·∫£ g√≥i ƒë·ªÅu
            bao g·ªìm ƒë·∫∑t l·ªãch tr·ª±c tuy·∫øn v√† h·ªó tr·ª£ 24/7.
          </p>
        </div>

        {/* Service Plans Grid */}
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 mb-12">
          {servicePlans.map((plan) => (
            <div
              key={plan.id}
              className={`relative bg-white rounded-2xl shadow-xl border-2 transition-all duration-300 hover:shadow-2xl hover:-translate-y-2 ${
                plan.popular
                  ? "border-yellow-400 ring-4 ring-yellow-100 scale-105"
                  : "border-gray-200"
              }`}
            >
              {/* Popular Badge */}
              {plan.popular && (
                <div className="absolute -top-4 left-1/2 transform -translate-x-1/2">
                  <span className="bg-yellow-400 text-yellow-900 px-4 py-1 rounded-full text-sm font-bold shadow-lg">
                    ‚≠ê PH·ªî BI·∫æN NH·∫§T
                  </span>
                </div>
              )}

              {/* Plan Header */}
              <div className="p-8 text-center">
                <div className="text-4xl mb-4">{plan.icon}</div>
                <h3 className="text-2xl font-bold text-gray-900 mb-2">
                  {plan.name}
                </h3>
                <div
                  className={`inline-block px-3 py-1 rounded-full text-sm font-semibold mb-4 ${getColorClasses(
                    plan.color
                  )}`}
                >
                  {plan.type}
                </div>
                <div className="mb-4">
                  <span className="text-4xl font-bold text-gray-900">
                    {plan.price}
                  </span>
                  <span className="text-gray-600 ml-2">/{plan.period}</span>
                </div>
                <p className="text-gray-600 text-sm mb-6">{plan.description}</p>
              </div>

              {/* Features */}
              <div className="px-8 pb-8">
                <ul className="space-y-3 mb-8">
                  {plan.features.map((feature, index) => (
                    <li
                      key={index}
                      className="flex items-center text-sm text-gray-600"
                    >
                      <span className="text-green-500 mr-3">‚úì</span>
                      {feature}
                    </li>
                  ))}
                </ul>

                {/* Action Button */}
                {plan.id === 1 ? (
                  <div className="w-full py-3 px-6 rounded-lg font-semibold bg-gray-100 text-gray-600 text-center">
                    ‚úÖ ƒê√£ c√≥ s·∫µn
                  </div>
                ) : (
                  <button
                    onClick={() => handleSelectPlan(plan)}
                    className={`w-full py-3 px-6 rounded-lg font-semibold transition-all duration-300 ${getButtonClasses(
                      plan.color
                    )} hover:shadow-lg`}
                  >
                    {selectedPlan?.id === plan.id ? "ƒê√£ Ch·ªçn" : "Ch·ªçn G√≥i N√†y"}
                  </button>
                )}
              </div>
            </div>
          ))}
        </div>

        {/* Selected Plan Info */}
        {selectedPlan && (
          <div className="bg-white rounded-2xl shadow-xl p-8 border-2 border-gray-200">
            <div className="text-center">
              <h3 className="text-2xl font-bold text-gray-900 mb-4">
                üéâ B·∫°n ƒë√£ ch·ªçn: {selectedPlan.name}
              </h3>
              <p className="text-lg text-gray-600 mb-6">
                {selectedPlan.description}
              </p>
              <div className="flex flex-col sm:flex-row gap-4 justify-center">
                <button className="bg-green-600 hover:bg-green-700 text-white px-8 py-3 rounded-lg font-semibold transition-colors">
                  üöÄ ƒêƒÉng K√Ω Ngay
                </button>
                <button
                  onClick={() => setSelectedPlan(null)}
                  className="bg-gray-500 hover:bg-gray-600 text-white px-8 py-3 rounded-lg font-semibold transition-colors"
                >
                  üîÑ Ch·ªçn L·∫°i
                </button>
              </div>
            </div>
          </div>
        )}

        {/* Additional Info */}
        <div className="mt-12 text-center">
          <div className="bg-blue-50 rounded-2xl p-8 border border-blue-200">
            <h3 className="text-2xl font-bold text-blue-900 mb-4">
              üí° T·∫°i sao ch·ªçn VoltSwap?
            </h3>
            <div className="grid grid-cols-1 md:grid-cols-3 gap-6 text-left">
              <div className="flex items-start gap-3">
                <div className="text-2xl">‚ö°</div>
                <div>
                  <h4 className="font-semibold text-blue-900 mb-2">
                    Nhanh Ch√≥ng
                  </h4>
                  <p className="text-blue-700 text-sm">
                    ƒê·ªïi pin ch·ªâ trong 5 ph√∫t, kh√¥ng c·∫ßn ch·ªù ƒë·ª£i
                  </p>
                </div>
              </div>
              <div className="flex items-start gap-3">
                <div className="text-2xl">üîí</div>
                <div>
                  <h4 className="font-semibold text-blue-900 mb-2">An To√†n</h4>
                  <p className="text-blue-700 text-sm">
                    Pin ch√≠nh h√£ng, ƒë·∫£m b·∫£o ch·∫•t l∆∞·ª£ng 100%
                  </p>
                </div>
              </div>
              <div className="flex items-start gap-3">
                <div className="text-2xl">üì±</div>
                <div>
                  <h4 className="font-semibold text-blue-900 mb-2">Ti·ªán L·ª£i</h4>
                  <p className="text-blue-700 text-sm">
                    ƒê·∫∑t l·ªãch online, thanh to√°n linh ho·∫°t
                  </p>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>
  );
}
